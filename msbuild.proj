<!--
 Copyright (c) 2016-2019 Michael G. Brehm
 
 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the "Software"), to deal
 in the Software without restriction, including without limitation the rights
 to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 copies of the Software, and to permit persons to whom the Software is
 furnished to do so, subject to the following conditions:
 
 The above copyright notice and this permission notice shall be included in all
 copies or substantial portions of the Software.
 
 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 SOFTWARE.
-->

<Project DefaultTargets="windows" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  
  <PropertyGroup>
    <AddonVersion></AddonVersion>           <!-- Set by AddonVersion Target -->
    <BashExe>$(WINDIR)\Sysnative\bash.exe</BashExe>
    <Configuration>Release</Configuration>
    <Keystore></Keystore>                   <!-- Must be set on the command line -->
    <KeystorePassword></KeystorePassword>   <!-- Must be set on the command line -->
    <KodiBaseline>leia</KodiBaseline>
    <ZipperExe>depends\build\zuki.build.tools.zipper.exe</ZipperExe>
  </PropertyGroup>

  <!-- DownloadFile: Downloads a file using System.Net.WebClient -->
  <UsingTask TaskName="DownloadFile" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll">
    <ParameterGroup>
      <Uri ParameterType="System.String" Required="true"/>
      <Output ParameterType="System.String" Required="true"/>
    </ParameterGroup>
    <Task>
      <Reference Include="System.Core"/>
      <Code Type="Fragment" Language="cs">
        <![CDATA[new System.Net.WebClient().DownloadFile(Uri, Output);]]>
      </Code>
    </Task>
  </UsingTask>

  <!-- ReadCertificateSubject: Reads the subject from an X.509 certificate file (.cer, .pfx) -->
  <UsingTask TaskName="ReadCertificateSubject" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll">
    <ParameterGroup>
      <filename ParameterType="System.String" Required="true"/>
      <password ParameterType="System.String" Required="true"/>
      <subject ParameterType="System.String" Output="true"/>
    </ParameterGroup>
    <Task>
      <Reference Include="System.Core"/>
      <Code Type="Fragment" Language="cs">
        <![CDATA[subject = (new System.Security.Cryptography.X509Certificates.X509Certificate2(filename, password)).Subject;]]>
      </Code>
    </Task>
  </UsingTask>

  <!-- ReplaceInFile: Replaces text in a file based on a regular expression -->
  <UsingTask TaskName="ReplaceInFile" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll">
    <ParameterGroup>
      <filename ParameterType="System.String" Required="true"/>
      <match ParameterType="System.String" Required="true"/>
      <replacewith ParameterType="System.String" Required="true"/>
    </ParameterGroup>
    <Task>
      <Reference Include="System.Core"/>
      <Code Type="Fragment" Language="cs">
        <![CDATA[System.IO.File.WriteAllText(filename, System.Text.RegularExpressions.Regex.Replace(System.IO.File.ReadAllText(filename), match, replacewith));]]>
      </Code>
    </Task>
  </UsingTask>

  <!-- Generates tmp\version\version.txt file and populates AddonVersion property -->
  <Target Name="AddonVersion">
    
    <MSBuild Projects="src\version.vcxproj" Properties="Configuration=$(Configuration);Platform=Win32" Targets="Rebuild" ContinueOnError="false"/>
    <CreateProperty Value="$([System.IO.File]::ReadAllText(tmp\version\version.txt))">
      <Output TaskParameter="Value" PropertyName="AddonVersion" />
    </CreateProperty>
    
  </Target>

  <!-- Generates tmp\addon-*.xml files -->
  <Target Name="AddonXml" DependsOnTargets="AddonVersion">
    
    <MSBuild Projects="src\addonxml.vcxproj" Properties="Configuration=$(Configuration);Platform=Win32" Targets="Rebuild" ContinueOnError="false"/>
    
  </Target>
  
  <!-- BUILD: WINDOWS-WIN32 -->
  <Target Name="windows-win32" DependsOnTargets="AddonVersion;AddonXml">

    <MakeDir Directories="out\windows-win32" ContinueOnError="false"/>
    <MSBuild Projects="src\windows.vcxproj" Properties="Configuration=$(Configuration);Platform=Win32" Targets="Build" ContinueOnError="false"/>
    <MSBuild Projects="src\sqlite3.vcxproj" Properties="Configuration=$(Configuration);Platform=Win32" Targets="Build" ContinueOnError="false"/>
    <Exec Command="$(ZipperExe) create out\zuki.pvr.hdhomerundvr-windows-win32-$(KodiBaseline)-$(AddonVersion).zip manifest\windows-win32.manifest -sha256" ContinueOnError="false"/>

  </Target>

  <!-- BUILD: WINDOWS-X64 -->
  <Target Name="windows-x64" DependsOnTargets="AddonVersion;AddonXml">

    <MakeDir Directories="out\windows-x64" ContinueOnError="false"/>
    <MSBuild Projects="src\windows.vcxproj" Properties="Configuration=$(Configuration);Platform=x64" Targets="Build" ContinueOnError="false"/>
    <MSBuild Projects="src\sqlite3.vcxproj" Properties="Configuration=$(Configuration);Platform=x64" Targets="Build" ContinueOnError="false"/>
    <Exec Command="$(ZipperExe) create out\zuki.pvr.hdhomerundvr-windows-x64-$(KodiBaseline)-$(AddonVersion).zip manifest\windows-x64.manifest -sha256" ContinueOnError="false"/>

  </Target>

  <!-- BUILD: UWP-WIN32 -->
  <Target Name="uwp-win32" DependsOnTargets="AddonVersion;AddonXml">

    <MakeDir Directories="out\uwp-win32" ContinueOnError="false"/>
    <MSBuild Projects="src\uwp.vcxproj" Properties="Configuration=$(Configuration);Platform=Win32" Targets="Build" ContinueOnError="false"/>
    <Exec Command="$(ZipperExe) create out\zuki.pvr.hdhomerundvr-uwp-win32-$(KodiBaseline)-$(AddonVersion).zip manifest\uwp-win32.manifest" ContinueOnError="false"/>

  </Target>

  <!-- BUILD: UWP-X64 -->
  <Target Name="uwp-x64" DependsOnTargets="AddonVersion;AddonXml">

    <MakeDir Directories="out\uwp-x64" ContinueOnError="false"/>
    <MSBuild Projects="src\uwp.vcxproj" Properties="Configuration=$(Configuration);Platform=x64" Targets="Build" ContinueOnError="false"/>
    <Exec Command="$(ZipperExe) create out\zuki.pvr.hdhomerundvr-uwp-x64-$(KodiBaseline)-$(AddonVersion).zip manifest\uwp-x64.manifest" ContinueOnError="false"/>

  </Target>

  <!-- BUILD: UWP-ARM -->
  <Target Name="uwp-arm" DependsOnTargets="AddonVersion;AddonXml">

    <MakeDir Directories="out\uwp-arm" ContinueOnError="false"/>
    <MSBuild Projects="src\uwp.vcxproj" Properties="Configuration=$(Configuration);Platform=ARM" Targets="Build" ContinueOnError="false"/>
    <Exec Command="$(ZipperExe) create out\zuki.pvr.hdhomerundvr-uwp-arm-$(KodiBaseline)-$(AddonVersion).zip manifest\uwp-arm.manifest" ContinueOnError="false"/>

  </Target>

  <!-- BUILD: LINUX-I686 -->
  <Target Name="linux-i686" DependsOnTargets="AddonVersion;AddonXml">

    <PropertyGroup>
      <CPPFLAGS>-Wall -Wno-unknown-pragmas -I/usr/include/i386-linux-gnu -Idepends/xbmc/xbmc -Idepends/xbmc/xbmc/linux -Idepends/xbmc/xbmc/addons/kodi-addon-dev-kit/include/kodi -Idepends/http-status-codes-cpp -Idepends/libcurl/linux-i686/include -Idepends/libuuid/linux-i686/include -Idepends/libhdhomerun -Idepends/sqlite -Itmp/version -L/usr/lib/gcc/i686-linux-gnu/4.9</CPPFLAGS>
      <CFLAGS>-DNDEBUG -fPIC -m32</CFLAGS>
      <CXXFLAGS>-DNDEBUG -fPIC -std=c++11 -m32</CXXFLAGS>
    </PropertyGroup>

    <MakeDir Directories="out\linux-i686" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;gcc-4.9 $(CPPFLAGS) $(CFLAGS) -c depends/libhdhomerun/hdhomerun_channels.c -o out/linux-i686/hdhomerun_channels.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;gcc-4.9 $(CPPFLAGS) $(CFLAGS) -c depends/libhdhomerun/hdhomerun_channelscan.c -o out/linux-i686/hdhomerun_channelscan.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;gcc-4.9 $(CPPFLAGS) $(CFLAGS) -c depends/libhdhomerun/hdhomerun_control.c -o out/linux-i686/hdhomerun_control.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;gcc-4.9 $(CPPFLAGS) $(CFLAGS) -c depends/libhdhomerun/hdhomerun_debug.c -o out/linux-i686/hdhomerun_debug.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;gcc-4.9 $(CPPFLAGS) $(CFLAGS) -c depends/libhdhomerun/hdhomerun_device.c -o out/linux-i686/hdhomerun_device.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;gcc-4.9 $(CPPFLAGS) $(CFLAGS) -c depends/libhdhomerun/hdhomerun_device_selector.c -o out/linux-i686/hdhomerun_device_selector.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;gcc-4.9 $(CPPFLAGS) $(CFLAGS) -c depends/libhdhomerun/hdhomerun_discover.c -o out/linux-i686/hdhomerun_discover.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;gcc-4.9 $(CPPFLAGS) $(CFLAGS) -c depends/libhdhomerun/hdhomerun_os_posix.c -o out/linux-i686/hdhomerun_os_posix.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;gcc-4.9 $(CPPFLAGS) $(CFLAGS) -c depends/libhdhomerun/hdhomerun_pkt.c -o out/linux-i686/hdhomerun_pkt.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;gcc-4.9 $(CPPFLAGS) $(CFLAGS) -c depends/libhdhomerun/hdhomerun_sock_posix.c -o out/linux-i686/hdhomerun_sock_posix.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;gcc-4.9 $(CPPFLAGS) $(CFLAGS) -c depends/libhdhomerun/hdhomerun_video.c -o out/linux-i686/hdhomerun_video.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;gcc-4.9 $(CPPFLAGS) $(CFLAGS) -DSQLITE_THREADSAFE=2 -DSQLITE_ENABLE_JSON1=1 -DSQLITE_TEMP_STORE=3 -c depends/sqlite/sqlite3.c -o out/linux-i686/sqlite3.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;g++-4.9 $(CPPFLAGS) $(CXXFLAGS) -c src/curlshare.cpp -o out/linux-i686/curlshare.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;g++-4.9 $(CPPFLAGS) $(CXXFLAGS) -c src/database.cpp -o out/linux-i686/database.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;g++-4.9 $(CPPFLAGS) $(CXXFLAGS) -c src/dbextension.cpp -o out/linux-i686/dbextension.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;g++-4.9 $(CPPFLAGS) $(CXXFLAGS) -c src/dvrstream.cpp -o out/linux-i686/dvrstream.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;g++-4.9 $(CPPFLAGS) $(CXXFLAGS) -c src/hdhr.cpp -o out/linux-i686/hdhr.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;g++-4.9 $(CPPFLAGS) $(CXXFLAGS) -c src/pvr.cpp -o out/linux-i686/pvr.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;g++-4.9 $(CPPFLAGS) $(CXXFLAGS) -c src/scheduler.cpp -o out/linux-i686/scheduler.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;g++-4.9 $(CPPFLAGS) $(CXXFLAGS) -c src/sqlite_exception.cpp -o out/linux-i686/sqlite_exception.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;g++-4.9 $(CPPFLAGS) $(CXXFLAGS) -shared -Wl,--version-script=exportlist/exportlist.linux out/linux-i686/curlshare.o out/linux-i686/database.o out/linux-i686/dbextension.o out/linux-i686/hdhr.o out/linux-i686/hdhomerun_channels.o out/linux-i686/hdhomerun_channelscan.o out/linux-i686/hdhomerun_control.o out/linux-i686/hdhomerun_debug.o out/linux-i686/hdhomerun_device.o out/linux-i686/hdhomerun_device_selector.o out/linux-i686/hdhomerun_discover.o out/linux-i686/hdhomerun_os_posix.o out/linux-i686/hdhomerun_pkt.o out/linux-i686/hdhomerun_sock_posix.o out/linux-i686/hdhomerun_video.o out/linux-i686/dvrstream.o out/linux-i686/pvr.o out/linux-i686/scheduler.o out/linux-i686/sqlite3.o out/linux-i686/sqlite_exception.o depends/libcurl/linux-i686/lib/libcurl.a depends/libuuid/linux-i686/lib/libuuid.a -ldl -lpthread -o out/linux-i686/zuki.pvr.hdhomerundvr.so&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;gcc-4.9 $(CPPFLAGS) -m32 -DSQLITE_ENABLE_JSON1=1 depends/sqlite/sqlite3.c depends/sqlite/shell.c -o out/linux-i686/sqlite3 -ldl -lpthread&quot;" ContinueOnError="false"/>
    <Exec Command="$(ZipperExe) create out\zuki.pvr.hdhomerundvr-linux-i686-$(KodiBaseline)-$(AddonVersion).zip manifest\linux-i686.manifest" ContinueOnError="false"/>

  </Target>

  <!-- BUILD: LINUX-X86_64 -->
  <Target Name="linux-x86_64" DependsOnTargets="AddonVersion;AddonXml">

    <PropertyGroup>
      <CPPFLAGS>-Wall -Wno-unknown-pragmas -I/usr/include/x86_64-linux-gnu -Idepends/xbmc/xbmc -Idepends/xbmc/xbmc/linux -Idepends/xbmc/xbmc/addons/kodi-addon-dev-kit/include/kodi -Idepends/http-status-codes-cpp -Idepends/libcurl/linux-x86_64/include -Idepends/libuuid/linux-x86_64/include -Idepends/libhdhomerun -Idepends/sqlite -Itmp/version -L/usr/lib/gcc/x86_64-linux-gnu/4.9</CPPFLAGS>
      <CFLAGS>-DNDEBUG -fPIC</CFLAGS>
      <CXXFLAGS>-DNDEBUG -fPIC -std=c++11</CXXFLAGS>
    </PropertyGroup>

    <MakeDir Directories="out\linux-x86_64" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;gcc-4.9 $(CPPFLAGS) $(CFLAGS) -c depends/libhdhomerun/hdhomerun_channels.c -o out/linux-x86_64/hdhomerun_channels.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;gcc-4.9 $(CPPFLAGS) $(CFLAGS) -c depends/libhdhomerun/hdhomerun_channelscan.c -o out/linux-x86_64/hdhomerun_channelscan.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;gcc-4.9 $(CPPFLAGS) $(CFLAGS) -c depends/libhdhomerun/hdhomerun_control.c -o out/linux-x86_64/hdhomerun_control.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;gcc-4.9 $(CPPFLAGS) $(CFLAGS) -c depends/libhdhomerun/hdhomerun_debug.c -o out/linux-x86_64/hdhomerun_debug.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;gcc-4.9 $(CPPFLAGS) $(CFLAGS) -c depends/libhdhomerun/hdhomerun_device.c -o out/linux-x86_64/hdhomerun_device.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;gcc-4.9 $(CPPFLAGS) $(CFLAGS) -c depends/libhdhomerun/hdhomerun_device_selector.c -o out/linux-x86_64/hdhomerun_device_selector.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;gcc-4.9 $(CPPFLAGS) $(CFLAGS) -c depends/libhdhomerun/hdhomerun_discover.c -o out/linux-x86_64/hdhomerun_discover.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;gcc-4.9 $(CPPFLAGS) $(CFLAGS) -c depends/libhdhomerun/hdhomerun_os_posix.c -o out/linux-x86_64/hdhomerun_os_posix.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;gcc-4.9 $(CPPFLAGS) $(CFLAGS) -c depends/libhdhomerun/hdhomerun_pkt.c -o out/linux-x86_64/hdhomerun_pkt.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;gcc-4.9 $(CPPFLAGS) $(CFLAGS) -c depends/libhdhomerun/hdhomerun_sock_posix.c -o out/linux-x86_64/hdhomerun_sock_posix.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;gcc-4.9 $(CPPFLAGS) $(CFLAGS) -c depends/libhdhomerun/hdhomerun_video.c -o out/linux-x86_64/hdhomerun_video.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;gcc-4.9 $(CPPFLAGS) $(CFLAGS) -DSQLITE_THREADSAFE=2 -DSQLITE_ENABLE_JSON1=1 -DSQLITE_TEMP_STORE=3 -c depends/sqlite/sqlite3.c -o out/linux-x86_64/sqlite3.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;g++-4.9 $(CPPFLAGS) $(CXXFLAGS) -c src/curlshare.cpp -o out/linux-x86_64/curlshare.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;g++-4.9 $(CPPFLAGS) $(CXXFLAGS) -c src/database.cpp -o out/linux-x86_64/database.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;g++-4.9 $(CPPFLAGS) $(CXXFLAGS) -c src/dbextension.cpp -o out/linux-x86_64/dbextension.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;g++-4.9 $(CPPFLAGS) $(CXXFLAGS) -c src/dvrstream.cpp -o out/linux-x86_64/dvrstream.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;g++-4.9 $(CPPFLAGS) $(CXXFLAGS) -c src/hdhr.cpp -o out/linux-x86_64/hdhr.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;g++-4.9 $(CPPFLAGS) $(CXXFLAGS) -c src/pvr.cpp -o out/linux-x86_64/pvr.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;g++-4.9 $(CPPFLAGS) $(CXXFLAGS) -c src/scheduler.cpp -o out/linux-x86_64/scheduler.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;g++-4.9 $(CPPFLAGS) $(CXXFLAGS) -c src/sqlite_exception.cpp -o out/linux-x86_64/sqlite_exception.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;g++-4.9 $(CPPFLAGS) $(CXXFLAGS) -shared -Wl,--version-script=exportlist/exportlist.linux out/linux-x86_64/curlshare.o out/linux-x86_64/database.o out/linux-x86_64/dbextension.o out/linux-x86_64/hdhr.o out/linux-x86_64/hdhomerun_channels.o out/linux-x86_64/hdhomerun_channelscan.o out/linux-x86_64/hdhomerun_control.o out/linux-x86_64/hdhomerun_debug.o out/linux-x86_64/hdhomerun_device.o out/linux-x86_64/hdhomerun_device_selector.o out/linux-x86_64/hdhomerun_discover.o out/linux-x86_64/hdhomerun_os_posix.o out/linux-x86_64/hdhomerun_pkt.o out/linux-x86_64/hdhomerun_sock_posix.o out/linux-x86_64/hdhomerun_video.o out/linux-x86_64/dvrstream.o out/linux-x86_64/pvr.o out/linux-x86_64/scheduler.o out/linux-x86_64/sqlite3.o out/linux-x86_64/sqlite_exception.o depends/libcurl/linux-x86_64/lib/libcurl.a depends/libuuid/linux-x86_64/lib/libuuid.a -ldl -lpthread -o out/linux-x86_64/zuki.pvr.hdhomerundvr.so&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;gcc-4.9 $(CPPFLAGS) -DSQLITE_ENABLE_JSON1=1 depends/sqlite/sqlite3.c depends/sqlite/shell.c -o out/linux-x86_64/sqlite3 -ldl -lpthread&quot;" ContinueOnError="false"/>
    <Exec Command="$(ZipperExe) create out\zuki.pvr.hdhomerundvr-linux-x86_64-$(KodiBaseline)-$(AddonVersion).zip manifest\linux-x86_64.manifest" ContinueOnError="false"/>

  </Target>

  <!-- BUILD: LINUX-ARMEL -->
  <Target Name="linux-armel" DependsOnTargets="AddonVersion;AddonXml">

    <PropertyGroup>
      <CPPFLAGS>-Wall -Wno-unknown-pragmas -Idepends/xbmc/xbmc -Idepends/xbmc/xbmc/linux -Idepends/xbmc/xbmc/addons/kodi-addon-dev-kit/include/kodi -Idepends/http-status-codes-cpp -Idepends/libcurl/linux-armel/include -Idepends/libuuid/linux-armel/include -Idepends/libhdhomerun -Idepends/sqlite -Itmp/version</CPPFLAGS>
      <CFLAGS>-DNDEBUG -fPIC</CFLAGS>
      <CXXFLAGS>-DNDEBUG -fPIC -std=c++11</CXXFLAGS>
    </PropertyGroup>

    <MakeDir Directories="out\linux-armel" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;arm-linux-gnueabi-gcc-4.9 $(CPPFLAGS) $(CFLAGS) -c depends/libhdhomerun/hdhomerun_channels.c -o out/linux-armel/hdhomerun_channels.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;arm-linux-gnueabi-gcc-4.9 $(CPPFLAGS) $(CFLAGS) -c depends/libhdhomerun/hdhomerun_channelscan.c -o out/linux-armel/hdhomerun_channelscan.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;arm-linux-gnueabi-gcc-4.9 $(CPPFLAGS) $(CFLAGS) -c depends/libhdhomerun/hdhomerun_control.c -o out/linux-armel/hdhomerun_control.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;arm-linux-gnueabi-gcc-4.9 $(CPPFLAGS) $(CFLAGS) -c depends/libhdhomerun/hdhomerun_debug.c -o out/linux-armel/hdhomerun_debug.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;arm-linux-gnueabi-gcc-4.9 $(CPPFLAGS) $(CFLAGS) -c depends/libhdhomerun/hdhomerun_device.c -o out/linux-armel/hdhomerun_device.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;arm-linux-gnueabi-gcc-4.9 $(CPPFLAGS) $(CFLAGS) -c depends/libhdhomerun/hdhomerun_device_selector.c -o out/linux-armel/hdhomerun_device_selector.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;arm-linux-gnueabi-gcc-4.9 $(CPPFLAGS) $(CFLAGS) -c depends/libhdhomerun/hdhomerun_discover.c -o out/linux-armel/hdhomerun_discover.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;arm-linux-gnueabi-gcc-4.9 $(CPPFLAGS) $(CFLAGS) -c depends/libhdhomerun/hdhomerun_os_posix.c -o out/linux-armel/hdhomerun_os_posix.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;arm-linux-gnueabi-gcc-4.9 $(CPPFLAGS) $(CFLAGS) -c depends/libhdhomerun/hdhomerun_pkt.c -o out/linux-armel/hdhomerun_pkt.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;arm-linux-gnueabi-gcc-4.9 $(CPPFLAGS) $(CFLAGS) -c depends/libhdhomerun/hdhomerun_sock_posix.c -o out/linux-armel/hdhomerun_sock_posix.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;arm-linux-gnueabi-gcc-4.9 $(CPPFLAGS) $(CFLAGS) -c depends/libhdhomerun/hdhomerun_video.c -o out/linux-armel/hdhomerun_video.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;arm-linux-gnueabi-gcc-4.9 $(CPPFLAGS) $(CFLAGS) -DSQLITE_THREADSAFE=2 -DSQLITE_ENABLE_JSON1=1 -DSQLITE_TEMP_STORE=3 -c depends/sqlite/sqlite3.c -o out/linux-armel/sqlite3.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;arm-linux-gnueabi-g++-4.9 $(CPPFLAGS) $(CXXFLAGS) -c src/curlshare.cpp -o out/linux-armel/curlshare.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;arm-linux-gnueabi-g++-4.9 $(CPPFLAGS) $(CXXFLAGS) -c src/database.cpp -o out/linux-armel/database.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;arm-linux-gnueabi-g++-4.9 $(CPPFLAGS) $(CXXFLAGS) -c src/dbextension.cpp -o out/linux-armel/dbextension.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;arm-linux-gnueabi-g++-4.9 $(CPPFLAGS) $(CXXFLAGS) -c src/dvrstream.cpp -o out/linux-armel/dvrstream.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;arm-linux-gnueabi-g++-4.9 $(CPPFLAGS) $(CXXFLAGS) -c src/hdhr.cpp -o out/linux-armel/hdhr.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;arm-linux-gnueabi-g++-4.9 $(CPPFLAGS) $(CXXFLAGS) -c src/pvr.cpp -o out/linux-armel/pvr.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;arm-linux-gnueabi-g++-4.9 $(CPPFLAGS) $(CXXFLAGS) -c src/scheduler.cpp -o out/linux-armel/scheduler.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;arm-linux-gnueabi-g++-4.9 $(CPPFLAGS) $(CXXFLAGS) -c src/sqlite_exception.cpp -o out/linux-armel/sqlite_exception.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;arm-linux-gnueabi-g++-4.9 $(CPPFLAGS) $(CXXFLAGS) -shared -Wl,--version-script=exportlist/exportlist.linux out/linux-armel/curlshare.o out/linux-armel/database.o out/linux-armel/dbextension.o out/linux-armel/hdhr.o out/linux-armel/hdhomerun_channels.o out/linux-armel/hdhomerun_channelscan.o out/linux-armel/hdhomerun_control.o out/linux-armel/hdhomerun_debug.o out/linux-armel/hdhomerun_device.o out/linux-armel/hdhomerun_device_selector.o out/linux-armel/hdhomerun_discover.o out/linux-armel/hdhomerun_os_posix.o out/linux-armel/hdhomerun_pkt.o out/linux-armel/hdhomerun_sock_posix.o out/linux-armel/hdhomerun_video.o out/linux-armel/dvrstream.o out/linux-armel/pvr.o out/linux-armel/scheduler.o out/linux-armel/sqlite3.o out/linux-armel/sqlite_exception.o depends/libcurl/linux-armel/lib/libcurl.a depends/libuuid/linux-armel/lib/libuuid.a -ldl -lpthread -o out/linux-armel/zuki.pvr.hdhomerundvr.so&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;arm-linux-gnueabi-gcc-4.9 $(CPPFLAGS) -DSQLITE_ENABLE_JSON1=1 depends/sqlite/sqlite3.c depends/sqlite/shell.c -o out/linux-armel/sqlite3 -ldl -lpthread&quot;" ContinueOnError="false"/>
    <Exec Command="$(ZipperExe) create out\zuki.pvr.hdhomerundvr-linux-armel-$(KodiBaseline)-$(AddonVersion).zip manifest\linux-armel.manifest" ContinueOnError="false"/>

  </Target>

  <!-- BUILD: LINUX-ARMHF -->
  <Target Name="linux-armhf" DependsOnTargets="AddonVersion;AddonXml">

    <PropertyGroup>
      <CPPFLAGS>-Wall -Wno-unknown-pragmas -Idepends/xbmc/xbmc -Idepends/xbmc/xbmc/linux -Idepends/xbmc/xbmc/addons/kodi-addon-dev-kit/include/kodi -Idepends/http-status-codes-cpp -Idepends/libcurl/linux-armhf/include -Idepends/libuuid/linux-armhf/include -Idepends/libhdhomerun -Idepends/sqlite -Itmp/version</CPPFLAGS>
      <CFLAGS>-DNDEBUG -fPIC</CFLAGS>
      <CXXFLAGS>-DNDEBUG -fPIC -std=c++11</CXXFLAGS>
    </PropertyGroup>

    <MakeDir Directories="out\linux-armhf" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;arm-linux-gnueabihf-gcc-4.9 $(CPPFLAGS) $(CFLAGS) -c depends/libhdhomerun/hdhomerun_channels.c -o out/linux-armhf/hdhomerun_channels.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;arm-linux-gnueabihf-gcc-4.9 $(CPPFLAGS) $(CFLAGS) -c depends/libhdhomerun/hdhomerun_channelscan.c -o out/linux-armhf/hdhomerun_channelscan.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;arm-linux-gnueabihf-gcc-4.9 $(CPPFLAGS) $(CFLAGS) -c depends/libhdhomerun/hdhomerun_control.c -o out/linux-armhf/hdhomerun_control.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;arm-linux-gnueabihf-gcc-4.9 $(CPPFLAGS) $(CFLAGS) -c depends/libhdhomerun/hdhomerun_debug.c -o out/linux-armhf/hdhomerun_debug.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;arm-linux-gnueabihf-gcc-4.9 $(CPPFLAGS) $(CFLAGS) -c depends/libhdhomerun/hdhomerun_device.c -o out/linux-armhf/hdhomerun_device.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;arm-linux-gnueabihf-gcc-4.9 $(CPPFLAGS) $(CFLAGS) -c depends/libhdhomerun/hdhomerun_device_selector.c -o out/linux-armhf/hdhomerun_device_selector.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;arm-linux-gnueabihf-gcc-4.9 $(CPPFLAGS) $(CFLAGS) -c depends/libhdhomerun/hdhomerun_discover.c -o out/linux-armhf/hdhomerun_discover.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;arm-linux-gnueabihf-gcc-4.9 $(CPPFLAGS) $(CFLAGS) -c depends/libhdhomerun/hdhomerun_os_posix.c -o out/linux-armhf/hdhomerun_os_posix.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;arm-linux-gnueabihf-gcc-4.9 $(CPPFLAGS) $(CFLAGS) -c depends/libhdhomerun/hdhomerun_pkt.c -o out/linux-armhf/hdhomerun_pkt.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;arm-linux-gnueabihf-gcc-4.9 $(CPPFLAGS) $(CFLAGS) -c depends/libhdhomerun/hdhomerun_sock_posix.c -o out/linux-armhf/hdhomerun_sock_posix.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;arm-linux-gnueabihf-gcc-4.9 $(CPPFLAGS) $(CFLAGS) -c depends/libhdhomerun/hdhomerun_video.c -o out/linux-armhf/hdhomerun_video.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;arm-linux-gnueabihf-gcc-4.9 $(CPPFLAGS) $(CFLAGS) -DSQLITE_THREADSAFE=2 -DSQLITE_ENABLE_JSON1=1 -DSQLITE_TEMP_STORE=3 -c depends/sqlite/sqlite3.c -o out/linux-armhf/sqlite3.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;arm-linux-gnueabihf-g++-4.9 $(CPPFLAGS) $(CXXFLAGS) -c src/curlshare.cpp -o out/linux-armhf/curlshare.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;arm-linux-gnueabihf-g++-4.9 $(CPPFLAGS) $(CXXFLAGS) -c src/database.cpp -o out/linux-armhf/database.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;arm-linux-gnueabihf-g++-4.9 $(CPPFLAGS) $(CXXFLAGS) -c src/dbextension.cpp -o out/linux-armhf/dbextension.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;arm-linux-gnueabihf-g++-4.9 $(CPPFLAGS) $(CXXFLAGS) -c src/dvrstream.cpp -o out/linux-armhf/dvrstream.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;arm-linux-gnueabihf-g++-4.9 $(CPPFLAGS) $(CXXFLAGS) -c src/hdhr.cpp -o out/linux-armhf/hdhr.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;arm-linux-gnueabihf-g++-4.9 $(CPPFLAGS) $(CXXFLAGS) -c src/pvr.cpp -o out/linux-armhf/pvr.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;arm-linux-gnueabihf-g++-4.9 $(CPPFLAGS) $(CXXFLAGS) -c src/scheduler.cpp -o out/linux-armhf/scheduler.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;arm-linux-gnueabihf-g++-4.9 $(CPPFLAGS) $(CXXFLAGS) -c src/sqlite_exception.cpp -o out/linux-armhf/sqlite_exception.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;arm-linux-gnueabihf-g++-4.9 $(CPPFLAGS) $(CXXFLAGS) -shared -Wl,--version-script=exportlist/exportlist.linux out/linux-armhf/curlshare.o out/linux-armhf/database.o out/linux-armhf/dbextension.o out/linux-armhf/hdhr.o out/linux-armhf/hdhomerun_channels.o out/linux-armhf/hdhomerun_channelscan.o out/linux-armhf/hdhomerun_control.o out/linux-armhf/hdhomerun_debug.o out/linux-armhf/hdhomerun_device.o out/linux-armhf/hdhomerun_device_selector.o out/linux-armhf/hdhomerun_discover.o out/linux-armhf/hdhomerun_os_posix.o out/linux-armhf/hdhomerun_pkt.o out/linux-armhf/hdhomerun_sock_posix.o out/linux-armhf/hdhomerun_video.o out/linux-armhf/dvrstream.o out/linux-armhf/pvr.o out/linux-armhf/scheduler.o out/linux-armhf/sqlite3.o out/linux-armhf/sqlite_exception.o depends/libcurl/linux-armhf/lib/libcurl.a depends/libuuid/linux-armhf/lib/libuuid.a -ldl -lpthread -o out/linux-armhf/zuki.pvr.hdhomerundvr.so&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;arm-linux-gnueabihf-gcc-4.9 $(CPPFLAGS) -DSQLITE_ENABLE_JSON1=1 depends/sqlite/sqlite3.c depends/sqlite/shell.c -o out/linux-armhf/sqlite3 -ldl -lpthread&quot;" ContinueOnError="false"/>
    <Exec Command="$(ZipperExe) create out\zuki.pvr.hdhomerundvr-linux-armhf-$(KodiBaseline)-$(AddonVersion).zip manifest\linux-armhf.manifest" ContinueOnError="false"/>

  </Target>

  <!-- BUILD: LINUX-AARCH64 -->
  <Target Name="linux-aarch64" DependsOnTargets="AddonVersion;AddonXml">

    <PropertyGroup>
      <CPPFLAGS>-Wall -Wno-unknown-pragmas -Idepends/xbmc/xbmc -Idepends/xbmc/xbmc/linux -Idepends/xbmc/xbmc/addons/kodi-addon-dev-kit/include/kodi -Idepends/http-status-codes-cpp -Idepends/libcurl/linux-aarch64/include -Idepends/libuuid/linux-aarch64/include -Idepends/libhdhomerun -Idepends/sqlite -Itmp/version</CPPFLAGS>
      <CFLAGS>-DNDEBUG -fPIC</CFLAGS>
      <CXXFLAGS>-DNDEBUG -fPIC -std=c++11</CXXFLAGS>
    </PropertyGroup>

    <MakeDir Directories="out\linux-aarch64" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;aarch64-linux-gnu-gcc-4.9 $(CPPFLAGS) $(CFLAGS) -c depends/libhdhomerun/hdhomerun_channels.c -o out/linux-aarch64/hdhomerun_channels.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;aarch64-linux-gnu-gcc-4.9 $(CPPFLAGS) $(CFLAGS) -c depends/libhdhomerun/hdhomerun_channelscan.c -o out/linux-aarch64/hdhomerun_channelscan.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;aarch64-linux-gnu-gcc-4.9 $(CPPFLAGS) $(CFLAGS) -c depends/libhdhomerun/hdhomerun_control.c -o out/linux-aarch64/hdhomerun_control.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;aarch64-linux-gnu-gcc-4.9 $(CPPFLAGS) $(CFLAGS) -c depends/libhdhomerun/hdhomerun_debug.c -o out/linux-aarch64/hdhomerun_debug.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;aarch64-linux-gnu-gcc-4.9 $(CPPFLAGS) $(CFLAGS) -c depends/libhdhomerun/hdhomerun_device.c -o out/linux-aarch64/hdhomerun_device.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;aarch64-linux-gnu-gcc-4.9 $(CPPFLAGS) $(CFLAGS) -c depends/libhdhomerun/hdhomerun_device_selector.c -o out/linux-aarch64/hdhomerun_device_selector.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;aarch64-linux-gnu-gcc-4.9 $(CPPFLAGS) $(CFLAGS) -c depends/libhdhomerun/hdhomerun_discover.c -o out/linux-aarch64/hdhomerun_discover.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;aarch64-linux-gnu-gcc-4.9 $(CPPFLAGS) $(CFLAGS) -c depends/libhdhomerun/hdhomerun_os_posix.c -o out/linux-aarch64/hdhomerun_os_posix.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;aarch64-linux-gnu-gcc-4.9 $(CPPFLAGS) $(CFLAGS) -c depends/libhdhomerun/hdhomerun_pkt.c -o out/linux-aarch64/hdhomerun_pkt.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;aarch64-linux-gnu-gcc-4.9 $(CPPFLAGS) $(CFLAGS) -c depends/libhdhomerun/hdhomerun_sock_posix.c -o out/linux-aarch64/hdhomerun_sock_posix.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;aarch64-linux-gnu-gcc-4.9 $(CPPFLAGS) $(CFLAGS) -c depends/libhdhomerun/hdhomerun_video.c -o out/linux-aarch64/hdhomerun_video.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;aarch64-linux-gnu-gcc-4.9 $(CPPFLAGS) $(CFLAGS) -DSQLITE_THREADSAFE=2 -DSQLITE_ENABLE_JSON1=1 -DSQLITE_TEMP_STORE=3 -c depends/sqlite/sqlite3.c -o out/linux-aarch64/sqlite3.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;aarch64-linux-gnu-g++-4.9 $(CPPFLAGS) $(CXXFLAGS) -c src/curlshare.cpp -o out/linux-aarch64/curlshare.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;aarch64-linux-gnu-g++-4.9 $(CPPFLAGS) $(CXXFLAGS) -c src/database.cpp -o out/linux-aarch64/database.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;aarch64-linux-gnu-g++-4.9 $(CPPFLAGS) $(CXXFLAGS) -c src/dbextension.cpp -o out/linux-aarch64/dbextension.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;aarch64-linux-gnu-g++-4.9 $(CPPFLAGS) $(CXXFLAGS) -c src/dvrstream.cpp -o out/linux-aarch64/dvrstream.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;aarch64-linux-gnu-g++-4.9 $(CPPFLAGS) $(CXXFLAGS) -c src/hdhr.cpp -o out/linux-aarch64/hdhr.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;aarch64-linux-gnu-g++-4.9 $(CPPFLAGS) $(CXXFLAGS) -c src/pvr.cpp -o out/linux-aarch64/pvr.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;aarch64-linux-gnu-g++-4.9 $(CPPFLAGS) $(CXXFLAGS) -c src/scheduler.cpp -o out/linux-aarch64/scheduler.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;aarch64-linux-gnu-g++-4.9 $(CPPFLAGS) $(CXXFLAGS) -c src/sqlite_exception.cpp -o out/linux-aarch64/sqlite_exception.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;aarch64-linux-gnu-g++-4.9 $(CPPFLAGS) $(CXXFLAGS) -shared -Wl,--version-script=exportlist/exportlist.linux out/linux-aarch64/curlshare.o out/linux-aarch64/database.o out/linux-aarch64/dbextension.o out/linux-aarch64/hdhr.o out/linux-aarch64/hdhomerun_channels.o out/linux-aarch64/hdhomerun_channelscan.o out/linux-aarch64/hdhomerun_control.o out/linux-aarch64/hdhomerun_debug.o out/linux-aarch64/hdhomerun_device.o out/linux-aarch64/hdhomerun_device_selector.o out/linux-aarch64/hdhomerun_discover.o out/linux-aarch64/hdhomerun_os_posix.o out/linux-aarch64/hdhomerun_pkt.o out/linux-aarch64/hdhomerun_sock_posix.o out/linux-aarch64/hdhomerun_video.o out/linux-aarch64/dvrstream.o out/linux-aarch64/pvr.o out/linux-aarch64/scheduler.o out/linux-aarch64/sqlite3.o out/linux-aarch64/sqlite_exception.o depends/libcurl/linux-aarch64/lib/libcurl.a depends/libuuid/linux-aarch64/lib/libuuid.a -ldl -lpthread -o out/linux-aarch64/zuki.pvr.hdhomerundvr.so&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;aarch64-linux-gnu-gcc-4.9 $(CPPFLAGS) -DSQLITE_ENABLE_JSON1=1 depends/sqlite/sqlite3.c depends/sqlite/shell.c -o out/linux-aarch64/sqlite3 -ldl -lpthread&quot;" ContinueOnError="false"/>
    <Exec Command="$(ZipperExe) create out\zuki.pvr.hdhomerundvr-linux-aarch64-$(KodiBaseline)-$(AddonVersion).zip manifest\linux-aarch64.manifest" ContinueOnError="false"/>

  </Target>

  <!-- BUILD: RASPBIAN-ARMHF -->
  <Target Name="raspbian-armhf" DependsOnTargets="AddonVersion;AddonXml">

    <PropertyGroup>
      <ENV>PATH=~/raspberrypi/arm-bcm2708/gcc-linaro-arm-linux-gnueabihf-raspbian-x64/bin</ENV>
      <CPPFLAGS>-Wall -Wno-unknown-pragmas -Idepends/xbmc/xbmc -Idepends/xbmc/xbmc/linux -Idepends/xbmc/xbmc/addons/kodi-addon-dev-kit/include/kodi -Idepends/http-status-codes-cpp -Idepends/libcurl/raspbian-armhf/include -Idepends/libuuid/raspbian-armhf/include -Idepends/libhdhomerun -Idepends/sqlite -Itmp/version</CPPFLAGS>
      <CFLAGS>-DNDEBUG -fPIC</CFLAGS>
      <CXXFLAGS>-DNDEBUG -fPIC -std=c++11</CXXFLAGS>
    </PropertyGroup>

    <MakeDir Directories="out\raspbian-armhf" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;$(ENV) arm-linux-gnueabihf-gcc $(CPPFLAGS) $(CFLAGS) -c depends/libhdhomerun/hdhomerun_channels.c -o out/raspbian-armhf/hdhomerun_channels.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;$(ENV) arm-linux-gnueabihf-gcc $(CPPFLAGS) $(CFLAGS) -c depends/libhdhomerun/hdhomerun_channelscan.c -o out/raspbian-armhf/hdhomerun_channelscan.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;$(ENV) arm-linux-gnueabihf-gcc $(CPPFLAGS) $(CFLAGS) -c depends/libhdhomerun/hdhomerun_control.c -o out/raspbian-armhf/hdhomerun_control.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;$(ENV) arm-linux-gnueabihf-gcc $(CPPFLAGS) $(CFLAGS) -c depends/libhdhomerun/hdhomerun_debug.c -o out/raspbian-armhf/hdhomerun_debug.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;$(ENV) arm-linux-gnueabihf-gcc $(CPPFLAGS) $(CFLAGS) -c depends/libhdhomerun/hdhomerun_device.c -o out/raspbian-armhf/hdhomerun_device.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;$(ENV) arm-linux-gnueabihf-gcc $(CPPFLAGS) $(CFLAGS) -c depends/libhdhomerun/hdhomerun_device_selector.c -o out/raspbian-armhf/hdhomerun_device_selector.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;$(ENV) arm-linux-gnueabihf-gcc $(CPPFLAGS) $(CFLAGS) -c depends/libhdhomerun/hdhomerun_discover.c -o out/raspbian-armhf/hdhomerun_discover.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;$(ENV) arm-linux-gnueabihf-gcc $(CPPFLAGS) $(CFLAGS) -c depends/libhdhomerun/hdhomerun_os_posix.c -o out/raspbian-armhf/hdhomerun_os_posix.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;$(ENV) arm-linux-gnueabihf-gcc $(CPPFLAGS) $(CFLAGS) -c depends/libhdhomerun/hdhomerun_pkt.c -o out/raspbian-armhf/hdhomerun_pkt.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;$(ENV) arm-linux-gnueabihf-gcc $(CPPFLAGS) $(CFLAGS) -c depends/libhdhomerun/hdhomerun_sock_posix.c -o out/raspbian-armhf/hdhomerun_sock_posix.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;$(ENV) arm-linux-gnueabihf-gcc $(CPPFLAGS) $(CFLAGS) -c depends/libhdhomerun/hdhomerun_video.c -o out/raspbian-armhf/hdhomerun_video.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;$(ENV) arm-linux-gnueabihf-gcc $(CPPFLAGS) $(CFLAGS) -DSQLITE_THREADSAFE=2 -DSQLITE_ENABLE_JSON1=1 -DSQLITE_TEMP_STORE=3 -c depends/sqlite/sqlite3.c -o out/raspbian-armhf/sqlite3.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;$(ENV) arm-linux-gnueabihf-g++ $(CPPFLAGS) $(CXXFLAGS) -c src/curlshare.cpp -o out/raspbian-armhf/curlshare.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;$(ENV) arm-linux-gnueabihf-g++ $(CPPFLAGS) $(CXXFLAGS) -c src/database.cpp -o out/raspbian-armhf/database.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;$(ENV) arm-linux-gnueabihf-g++ $(CPPFLAGS) $(CXXFLAGS) -c src/dbextension.cpp -o out/raspbian-armhf/dbextension.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;$(ENV) arm-linux-gnueabihf-g++ $(CPPFLAGS) $(CXXFLAGS) -c src/dvrstream.cpp -o out/raspbian-armhf/dvrstream.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;$(ENV) arm-linux-gnueabihf-g++ $(CPPFLAGS) $(CXXFLAGS) -c src/hdhr.cpp -o out/raspbian-armhf/hdhr.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;$(ENV) arm-linux-gnueabihf-g++ $(CPPFLAGS) $(CXXFLAGS) -c src/pvr.cpp -o out/raspbian-armhf/pvr.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;$(ENV) arm-linux-gnueabihf-g++ $(CPPFLAGS) $(CXXFLAGS) -c src/scheduler.cpp -o out/raspbian-armhf/scheduler.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;$(ENV) arm-linux-gnueabihf-g++ $(CPPFLAGS) $(CXXFLAGS) -c src/sqlite_exception.cpp -o out/raspbian-armhf/sqlite_exception.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;$(ENV) arm-linux-gnueabihf-g++ $(CPPFLAGS) $(CXXFLAGS) -shared -Wl,--version-script=exportlist/exportlist.raspbian out/raspbian-armhf/curlshare.o out/raspbian-armhf/database.o out/raspbian-armhf/dbextension.o out/raspbian-armhf/hdhr.o out/raspbian-armhf/hdhomerun_channels.o out/raspbian-armhf/hdhomerun_channelscan.o out/raspbian-armhf/hdhomerun_control.o out/raspbian-armhf/hdhomerun_debug.o out/raspbian-armhf/hdhomerun_device.o out/raspbian-armhf/hdhomerun_device_selector.o out/raspbian-armhf/hdhomerun_discover.o out/raspbian-armhf/hdhomerun_os_posix.o out/raspbian-armhf/hdhomerun_pkt.o out/raspbian-armhf/hdhomerun_sock_posix.o out/raspbian-armhf/hdhomerun_video.o out/raspbian-armhf/dvrstream.o out/raspbian-armhf/pvr.o out/raspbian-armhf/scheduler.o out/raspbian-armhf/sqlite3.o out/raspbian-armhf/sqlite_exception.o depends/libcurl/raspbian-armhf/lib/libcurl.a depends/libuuid/raspbian-armhf/lib/libuuid.a -ldl -lpthread -o out/raspbian-armhf/zuki.pvr.hdhomerundvr.so&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;$(ENV) arm-linux-gnueabihf-gcc $(CPPFLAGS) -DSQLITE_ENABLE_JSON1=1 depends/sqlite/sqlite3.c depends/sqlite/shell.c -o out/raspbian-armhf/sqlite3 -ldl -lpthread&quot;" ContinueOnError="false"/>
    <Exec Command="$(ZipperExe) create out\zuki.pvr.hdhomerundvr-raspbian-armhf-$(KodiBaseline)-$(AddonVersion).zip manifest\raspbian-armhf.manifest" ContinueOnError="false"/>

  </Target>

  <!-- BUILD: OSX-X86_64 -->
  <Target Name="osx-x86_64" DependsOnTargets="AddonVersion;AddonXml">
    
    <PropertyGroup>
      <ENV>OSXCROSS_NO_EXTENSION_WARNINGS=1 PATH=~/osxcross/target/bin</ENV>
      <CPPFLAGS>-mmacosx-version-min=10.7 -Wall -Wno-unknown-pragmas -Idepends/xbmc/xbmc -Idepends/xbmc/xbmc/linux -Idepends/xbmc/xbmc/addons/kodi-addon-dev-kit/include/kodi -Idepends/http-status-codes-cpp -Idepends/libcurl/osx-x86_64/include -Idepends/libuuid/osx-x86_64/include -Idepends/libhdhomerun -Idepends/sqlite -Itmp/version</CPPFLAGS>
      <CFLAGS>-DNDEBUG -fPIC -stdlib=libc++</CFLAGS>
      <CXXFLAGS>-DNDEBUG -fPIC -std=c++11 -stdlib=libc++</CXXFLAGS>
    </PropertyGroup>

    <MakeDir Directories="out\osx-x86_64" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;$(ENV) x86_64-apple-darwin15-gcc $(CPPFLAGS) $(CFLAGS) -c depends/libhdhomerun/hdhomerun_channels.c -o out/osx-x86_64/hdhomerun_channels.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;$(ENV) x86_64-apple-darwin15-gcc $(CPPFLAGS) $(CFLAGS) -c depends/libhdhomerun/hdhomerun_channelscan.c -o out/osx-x86_64/hdhomerun_channelscan.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;$(ENV) x86_64-apple-darwin15-gcc $(CPPFLAGS) $(CFLAGS) -c depends/libhdhomerun/hdhomerun_control.c -o out/osx-x86_64/hdhomerun_control.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;$(ENV) x86_64-apple-darwin15-gcc $(CPPFLAGS) $(CFLAGS) -c depends/libhdhomerun/hdhomerun_debug.c -o out/osx-x86_64/hdhomerun_debug.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;$(ENV) x86_64-apple-darwin15-gcc $(CPPFLAGS) $(CFLAGS) -c depends/libhdhomerun/hdhomerun_device.c -o out/osx-x86_64/hdhomerun_device.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;$(ENV) x86_64-apple-darwin15-gcc $(CPPFLAGS) $(CFLAGS) -c depends/libhdhomerun/hdhomerun_device_selector.c -o out/osx-x86_64/hdhomerun_device_selector.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;$(ENV) x86_64-apple-darwin15-gcc $(CPPFLAGS) $(CFLAGS) -c depends/libhdhomerun/hdhomerun_discover.c -o out/osx-x86_64/hdhomerun_discover.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;$(ENV) x86_64-apple-darwin15-gcc $(CPPFLAGS) $(CFLAGS) -c depends/libhdhomerun/hdhomerun_os_posix.c -o out/osx-x86_64/hdhomerun_os_posix.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;$(ENV) x86_64-apple-darwin15-gcc $(CPPFLAGS) $(CFLAGS) -c depends/libhdhomerun/hdhomerun_pkt.c -o out/osx-x86_64/hdhomerun_pkt.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;$(ENV) x86_64-apple-darwin15-gcc $(CPPFLAGS) $(CFLAGS) -c depends/libhdhomerun/hdhomerun_sock_posix.c -o out/osx-x86_64/hdhomerun_sock_posix.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;$(ENV) x86_64-apple-darwin15-gcc $(CPPFLAGS) $(CFLAGS) -c depends/libhdhomerun/hdhomerun_video.c -o out/osx-x86_64/hdhomerun_video.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;$(ENV) x86_64-apple-darwin15-gcc $(CPPFLAGS) $(CFLAGS) -DSQLITE_THREADSAFE=2 -DSQLITE_ENABLE_JSON1=1 -DSQLITE_TEMP_STORE=3 -c depends/sqlite/sqlite3.c -o out/osx-x86_64/sqlite3.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;$(ENV) x86_64-apple-darwin15-g++ $(CPPFLAGS) $(CXXFLAGS) -c src/curlshare.cpp -o out/osx-x86_64/curlshare.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;$(ENV) x86_64-apple-darwin15-g++ $(CPPFLAGS) $(CXXFLAGS) -c src/database.cpp -o out/osx-x86_64/database.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;$(ENV) x86_64-apple-darwin15-g++ $(CPPFLAGS) $(CXXFLAGS) -c src/dbextension.cpp -o out/osx-x86_64/dbextension.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;$(ENV) x86_64-apple-darwin15-g++ $(CPPFLAGS) $(CXXFLAGS) -c src/dvrstream.cpp -o out/osx-x86_64/dvrstream.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;$(ENV) x86_64-apple-darwin15-g++ $(CPPFLAGS) $(CXXFLAGS) -c src/hdhr.cpp -o out/osx-x86_64/hdhr.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;$(ENV) x86_64-apple-darwin15-g++ $(CPPFLAGS) $(CXXFLAGS) -c src/pvr.cpp -o out/osx-x86_64/pvr.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;$(ENV) x86_64-apple-darwin15-g++ $(CPPFLAGS) $(CXXFLAGS) -c src/scheduler.cpp -o out/osx-x86_64/scheduler.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;$(ENV) x86_64-apple-darwin15-g++ $(CPPFLAGS) $(CXXFLAGS) -c src/sqlite_exception.cpp -o out/osx-x86_64/sqlite_exception.o&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;$(ENV) x86_64-apple-darwin15-g++ $(CPPFLAGS) $(CXXFLAGS) -dynamiclib -exported_symbols_list exportlist/exportlist.osx out/osx-x86_64/curlshare.o out/osx-x86_64/database.o out/osx-x86_64/dbextension.o out/osx-x86_64/hdhr.o out/osx-x86_64/hdhomerun_channels.o out/osx-x86_64/hdhomerun_channelscan.o out/osx-x86_64/hdhomerun_control.o out/osx-x86_64/hdhomerun_debug.o out/osx-x86_64/hdhomerun_device.o out/osx-x86_64/hdhomerun_device_selector.o out/osx-x86_64/hdhomerun_discover.o out/osx-x86_64/hdhomerun_os_posix.o out/osx-x86_64/hdhomerun_pkt.o out/osx-x86_64/hdhomerun_sock_posix.o out/osx-x86_64/hdhomerun_video.o out/osx-x86_64/dvrstream.o out/osx-x86_64/pvr.o out/osx-x86_64/scheduler.o out/osx-x86_64/sqlite3.o out/osx-x86_64/sqlite_exception.o depends/libcurl/osx-x86_64/lib/libcurl.a depends/libuuid/osx-x86_64/lib/libuuid.a -ldl -lpthread -o out/osx-x86_64/zuki.pvr.hdhomerundvr.dylib&quot;" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;$(ENV) x86_64-apple-darwin15-gcc $(CPPFLAGS) -DSQLITE_ENABLE_JSON1=1 depends/sqlite/sqlite3.c depends/sqlite/shell.c -o out/osx-x86_64/sqlite3 -ldl -lpthread&quot;" ContinueOnError="false"/>
    <Exec Command="$(ZipperExe) create out\zuki.pvr.hdhomerundvr-osx-x86_64-$(KodiBaseline)-$(AddonVersion).zip manifest\osx-x86_64.manifest -sha256" ContinueOnError="false"/>

  </Target>

  <!-- BUILD: ANDROID-ARM -->
  <Target Name="android-arm" DependsOnTargets="AddonVersion;AddonXml">

    <Error Condition="'$(ANDROID_NDK_ROOT)' == ''" Text="Environment variable ANDROID_NDK_ROOT has not been set; see README.md"/>

    <MakeDir Directories="out" ContinueOnError="false"/>
    <Exec Command="&quot;$(ANDROID_NDK_ROOT)\ndk-build.cmd&quot; APP_ABI=armeabi-v7a NDK_APPLICATION_MK=Application.mk NDK_PROJECT_PATH=. NDK_OUT=out\android-arm NDK_LIBS_OUT=out\android-arm" ContinueOnError="false"/>
    <Exec Command="$(ZipperExe) create out\zuki.pvr.hdhomerundvr-android-arm-$(KodiBaseline)-$(AddonVersion).zip manifest\android-arm.manifest -sha256" ContinueOnError="false"/>

  </Target>

  <!-- BUILD: ANDROID-AARCH64 -->
  <Target Name="android-aarch64" DependsOnTargets="AddonVersion;AddonXml">

    <Error Condition="'$(ANDROID_NDK_ROOT)' == ''" Text="Environment variable ANDROID_NDK_ROOT has not been set; see README.md"/>

    <MakeDir Directories="out" ContinueOnError="false"/>
    <Exec Command="&quot;$(ANDROID_NDK_ROOT)\ndk-build.cmd&quot; APP_ABI=arm64-v8a NDK_APPLICATION_MK=Application.mk NDK_PROJECT_PATH=. NDK_OUT=out\android-aarch64 NDK_LIBS_OUT=out\android-aarch64" ContinueOnError="false"/>
    <Exec Command="$(ZipperExe) create out\zuki.pvr.hdhomerundvr-android-aarch64-$(KodiBaseline)-$(AddonVersion).zip manifest\android-aarch64.manifest -sha256" ContinueOnError="false"/>

  </Target>

  <!-- BUILD: ANDROID-X86 -->
  <Target Name="android-x86" DependsOnTargets="AddonVersion;AddonXml">

    <Error Condition="'$(ANDROID_NDK_ROOT)' == ''" Text="Environment variable ANDROID_NDK_ROOT has not been set; see README.md"/>

    <MakeDir Directories="out" ContinueOnError="false"/>
    <Exec Command="&quot;$(ANDROID_NDK_ROOT)\ndk-build.cmd&quot; APP_ABI=x86 NDK_APPLICATION_MK=Application.mk NDK_PROJECT_PATH=. NDK_OUT=out\android-x86 NDK_LIBS_OUT=out\android-x86" ContinueOnError="false"/>
    <Exec Command="$(ZipperExe) create out\zuki.pvr.hdhomerundvr-android-x86-$(KodiBaseline)-$(AddonVersion).zip manifest\android-x86.manifest -sha256" ContinueOnError="false"/>

  </Target>

  <!-- BUILD: UWPAPPX-WIN32 -->
  <Target Name="uwpappx-win32" DependsOnTargets="AddonVersion;uwp-win32">

    <Error Condition="'$(JAVA_HOME)' == ''" Text="Environment variable JAVA_HOME has not been set"/>
    <Error Condition="'$(Keystore)' == ''" Text="Variable Keystore has not been set; specify with /p:Keystore=xxx;KeystorePassword=xxx"/>
    <Error Condition="'$(KeystorePassword)' == ''" Text="Variable KeystorePassword has not been set; specify with /p:Keystore=xxx;KeystorePassword=xxx"/>

    <PropertyGroup>
      <BuildNumber>$([System.Version]::Parse($(AddonVersion)).Revision)</BuildNumber>
      <AppxVersionCode>18.0.$(BuildNumber).0</AppxVersionCode>
      <PhoneProductId>1F9928BF-0F41-49C8-941A-466153ED2C55</PhoneProductId>
      <KodiAppx>Kodi-20190127-7f93d8b2-master-x86</KodiAppx>
      <ZukiAppx>kodi-18.0-zuki.pvr.hdhomerundvr-win32-$(AddonVersion)</ZukiAppx>
      <AppxNamespaces>&lt;Namespace Prefix='n' Uri='http://schemas.microsoft.com/appx/manifest/foundation/windows10' /&gt;&lt;Namespace Prefix='mp' Uri='http://schemas.microsoft.com/appx/2014/phone/manifest' /&gt;</AppxNamespaces>
    </PropertyGroup>

    <MakeDir Directories="tmp;out" ContinueOnError="false"/>
    <Delete Files="tmp\$(ZukiAppx).pfx;out\$(ZukiAppx).cer"/>
    <Exec Command="&quot;$(JAVA_HOME)\bin\keytool&quot; -importkeystore -srckeystore &quot;$(Keystore)&quot; -srcstorepass $(KeystorePassword) -srcstoretype JKS -destkeystore &quot;tmp\$(ZukiAppx).pfx&quot; -deststoretype PKCS12 -deststorepass $(KeystorePassword)" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;openssl pkcs12 -in tmp/$(ZukiAppx).pfx -nokeys -out out/$(ZukiAppx).cer -password pass:$(KeystorePassword)&quot;" ContinueOnError="false"/>

    <ReadCertificateSubject filename="tmp\$(ZukiAppx).pfx" password="$(KeystorePassword)">
      <Output PropertyName="CertificateSubject" TaskParameter="subject"/>
    </ReadCertificateSubject>
	
    <MakeDir Directories="tmp" ContinueOnError="false"/>
    <Message Condition="!Exists('tmp\$(KodiAppx).appx')" Importance="high" Text="Downloading $(KodiAppx).appx ..."/>
    <DownloadFile Condition="!Exists('tmp\$(KodiAppx).appx')" Uri="http://mirrors.kodi.tv/nightlies/windows/uwp32/master/$(KodiAppx).appx" Output="tmp\$(KodiAppx).appx"/>

    <RemoveDir Directories="out\$(KodiAppx)"/>
    <Exec Command="makeappx unpack /p tmp\$(KodiAppx).appx /l /d out\$(KodiAppx)" ContinueOnError="false"/>
    <Delete Files="out\$(KodiAppx)\AppxBlockMap.xml;out\$(KodiAppx)\AppxMetadata\CodeIntegrity.cat;out\$(KodiAppx)\AppxSignature.p7x"/>
    <Exec Command="PowerShell Expand-Archive -Path out\zuki.pvr.hdhomerundvr-uwp-win32-$(KodiBaseline)-$(AddonVersion).zip -DestinationPath out\$(KodiAppx)\addons\" ContinueOnError="false"/>
    <XmlPoke XmlInputPath="out\$(KodiAppx)\AppxManifest.xml" Namespaces="$(AppxNamespaces)" Query="//n:Package/n:Identity/@Publisher" Value="$(CertificateSubject)"/>
    <XmlPoke XmlInputPath="out\$(KodiAppx)\AppxManifest.xml" Namespaces="$(AppxNamespaces)" Query="//n:Package/n:Identity/@Version" Value="$(AppxVersionCode)"/>
    <XmlPoke XmlInputPath="out\$(KodiAppx)\AppxManifest.xml" Namespaces="$(AppxNamespaces)" Query="//n:Package/mp:PhoneIdentity/@PhoneProductId" Value="$([System.Guid]::NewGuid().ToString('d'))"/>
    <Exec Command="makeappx pack /d out\$(KodiAppx) /l /o /p out\$(ZukiAppx).appx" ContinueOnError="false"/>
    <Exec Command="signtool sign /fd SHA256 /a /f &quot;tmp\$(ZukiAppx).pfx&quot; /p $(KeystorePassword) out\$(ZukiAppx).appx" ContinueOnError="false"/>

  </Target>

  <!-- BUILD: UWPAPPX-X64 -->
  <Target Name="uwpappx-x64" DependsOnTargets="AddonVersion;uwp-x64">

    <Error Condition="'$(JAVA_HOME)' == ''" Text="Environment variable JAVA_HOME has not been set"/>
    <Error Condition="'$(Keystore)' == ''" Text="Variable Keystore has not been set; specify with /p:Keystore=xxx;KeystorePassword=xxx"/>
    <Error Condition="'$(KeystorePassword)' == ''" Text="Variable KeystorePassword has not been set; specify with /p:Keystore=xxx;KeystorePassword=xxx"/>

    <PropertyGroup>
      <BuildNumber>$([System.Version]::Parse($(AddonVersion)).Revision)</BuildNumber>
      <AppxVersionCode>18.0.$(BuildNumber).0</AppxVersionCode>
      <PhoneProductId>1F9928BF-0F41-49C8-941A-466153ED2C55</PhoneProductId>
      <KodiAppx>Kodi-20190127-7f93d8b2-master-x64</KodiAppx>
      <ZukiAppx>kodi-18.0-zuki.pvr.hdhomerundvr-x64-$(AddonVersion)</ZukiAppx>
      <AppxNamespaces>&lt;Namespace Prefix='n' Uri='http://schemas.microsoft.com/appx/manifest/foundation/windows10' /&gt;&lt;Namespace Prefix='mp' Uri='http://schemas.microsoft.com/appx/2014/phone/manifest' /&gt;</AppxNamespaces>
    </PropertyGroup>

    <MakeDir Directories="tmp;out" ContinueOnError="false"/>
    <Delete Files="tmp\$(ZukiAppx).pfx;out\$(ZukiAppx).cer"/>
    <Exec Command="&quot;$(JAVA_HOME)\bin\keytool&quot; -importkeystore -srckeystore &quot;$(Keystore)&quot; -srcstorepass $(KeystorePassword) -srcstoretype JKS -destkeystore &quot;tmp\$(ZukiAppx).pfx&quot; -deststoretype PKCS12 -deststorepass $(KeystorePassword)" ContinueOnError="false"/>
    <Exec Command="$(BashExe) -c &quot;openssl pkcs12 -in tmp/$(ZukiAppx).pfx -nokeys -out out/$(ZukiAppx).cer -password pass:$(KeystorePassword)&quot;" ContinueOnError="false"/>

    <ReadCertificateSubject filename="tmp\$(ZukiAppx).pfx" password="$(KeystorePassword)">
      <Output PropertyName="CertificateSubject" TaskParameter="subject"/>
    </ReadCertificateSubject>
	
    <MakeDir Directories="tmp" ContinueOnError="false"/>
    <Message Condition="!Exists('tmp\$(KodiAppx).appx')" Importance="high" Text="Downloading $(KodiAppx).appx ..."/>
    <DownloadFile Condition="!Exists('tmp\$(KodiAppx).appx')" Uri="http://mirrors.kodi.tv/nightlies/windows/uwp64/master/$(KodiAppx).appx" Output="tmp\$(KodiAppx).appx"/>

    <RemoveDir Directories="out\$(KodiAppx)"/>
    <Exec Command="makeappx unpack /p tmp\$(KodiAppx).appx /l /d out\$(KodiAppx)" ContinueOnError="false"/>
    <Delete Files="out\$(KodiAppx)\AppxBlockMap.xml;out\$(KodiAppx)\AppxMetadata\CodeIntegrity.cat;out\$(KodiAppx)\AppxSignature.p7x"/>
    <Exec Command="PowerShell Expand-Archive -Path out\zuki.pvr.hdhomerundvr-uwp-x64-$(KodiBaseline)-$(AddonVersion).zip -DestinationPath out\$(KodiAppx)\addons\" ContinueOnError="false"/>
    <XmlPoke XmlInputPath="out\$(KodiAppx)\AppxManifest.xml" Namespaces="$(AppxNamespaces)" Query="//n:Package/n:Identity/@Publisher" Value="$(CertificateSubject)"/>
    <XmlPoke XmlInputPath="out\$(KodiAppx)\AppxManifest.xml" Namespaces="$(AppxNamespaces)" Query="//n:Package/n:Identity/@Version" Value="$(AppxVersionCode)"/>
    <XmlPoke XmlInputPath="out\$(KodiAppx)\AppxManifest.xml" Namespaces="$(AppxNamespaces)" Query="//n:Package/mp:PhoneIdentity/@PhoneProductId" Value="$([System.Guid]::NewGuid().ToString('d'))"/>
    <Exec Command="makeappx pack /d out\$(KodiAppx) /l /o /p out\$(ZukiAppx).appx" ContinueOnError="false"/>
    <Exec Command="signtool sign /fd SHA256 /a /f &quot;tmp\$(ZukiAppx).pfx&quot; /p $(KeystorePassword) out\$(ZukiAppx).appx" ContinueOnError="false"/>

  </Target>

  <!-- BUILD: PLATFORMS -->
  <Target Name="windows" DependsOnTargets="windows-win32;windows-x64"/>
  <Target Name="uwp" DependsOnTargets="uwp-win32;uwp-x64;uwp-arm"/>
  <Target Name="uwpappx" DependsOnTargets="uwpappx-win32;uwpappx-x64"/>
  <Target Name="linux" DependsOnTargets="linux-i686;linux-x86_64;linux-armel;linux-armhf;linux-aarch64"/>
  <Target Name="raspbian" DependsOnTargets="raspbian-armhf"/>
  <Target Name="osx" DependsOnTargets="osx-x86_64"/>
  <Target Name="android" DependsOnTargets="android-arm;android-aarch64;android-x86"/>
  
  <!-- BUILD: ALL -->
  <Target Name="all" DependsOnTargets="windows;uwp;uwpappx;linux;raspbian;osx;android"/>

</Project>
